<?xml version="1.0" encoding="utf-8"?>
<!--EXPORTED BY TOOL, DON'T MODIFY IT!-->
<!--Source File: FirstBT.xml-->
<behavior name="FirstBT" agenttype="CharacterAgent" version="5">
  <node class="Sequence" id="1">
    <node class="IfElse" id="6">
      <node class="And" id="7">
        <node class="Condition" id="8">
          <property Operator="GreaterEqual" />
          <property Opl="Self.CharacterAgent::DistanceToTarget()" />
          <property Opr="const float 6" />
        </node>
        <node class="Condition" id="9">
          <property Operator="LessEqual" />
          <property Opl="Self.CharacterAgent::DistanceToTarget()" />
          <property Opr="const float 10" />
        </node>
      </node>
      <node class="IfElse" id="2">
        <node class="Condition" id="3">
          <property Operator="Equal" />
          <property Opl="Self.CharacterAgent::CanUseSkill()" />
          <property Opr="const bool true" />
        </node>
        <node class="SelectorLoop" id="28">
          <property ResetChildren="false" />
          <node class="WithPrecondition" id="4">
            <node class="Condition" id="32">
              <property Operator="Equal" />
              <property Opl="Self.CharacterAgent::CanUseSkill()" />
              <property Opr="const bool true" />
            </node>
            <node class="Sequence" id="14">
              <node class="Action" id="17">
                <property Method="Self.CharacterAgent::StopMove()" />
                <property ResultOption="BT_SUCCESS" />
              </node>
              <node class="Wait" id="18">
                <property Time="const float 50" />
              </node>
              <node class="Action" id="20">
                <property Method="Self.CharacterAgent::PlayAnimation(&quot;attack_01_01&quot;)" />
                <property ResultOption="BT_SUCCESS" />
              </node>
              <node class="DecoratorLoop" id="24">
                <property Count="const int 50" />
                <property DecorateWhenChildEnds="true" />
                <property DoneWithinFrame="false" />
                <node class="Sequence" id="25">
                  <node class="Action" id="26">
                    <property Method="Self.CharacterAgent::FaceToTarget()" />
                    <property ResultOption="BT_SUCCESS" />
                  </node>
                  <node class="Wait" id="19">
                    <property Time="const float 10" />
                  </node>
                </node>
              </node>
              <node class="Action" id="15">
                <property Method="Self.CharacterAgent::PlayAnimation(&quot;attack_01_02&quot;)" />
                <property ResultOption="BT_SUCCESS" />
              </node>
              <node class="DecoratorLoop" id="22">
                <property Count="const int 10" />
                <property DecorateWhenChildEnds="true" />
                <property DoneWithinFrame="false" />
                <node class="Sequence" id="23">
                  <node class="Action" id="21">
                    <property Method="Self.CharacterAgent::FaceToTarget()" />
                    <property ResultOption="BT_SUCCESS" />
                  </node>
                  <node class="Wait" id="16">
                    <property Time="const float 10" />
                  </node>
                </node>
              </node>
              <node class="Action" id="29">
                <property Method="Self.CharacterAgent::UseSkill(100201)" />
                <property ResultOption="BT_SUCCESS" />
              </node>
            </node>
          </node>
          <node class="WithPrecondition" id="30">
            <node class="Condition" id="27">
              <property Operator="NotEqual" />
              <property Opl="Self.CharacterAgent::CanUseSkill()" />
              <property Opr="const bool true" />
            </node>
            <node class="DecoratorAlwaysFailure" id="31">
              <property DecorateWhenChildEnds="true" />
              <node class="Noop" id="33" />
            </node>
          </node>
        </node>
        <node class="Noop" id="5" />
      </node>
      <node class="IfElse" id="10">
        <node class="Condition" id="11">
          <property Operator="LessEqual" />
          <property Opl="Self.CharacterAgent::DistanceToTarget()" />
          <property Opr="const float 6" />
        </node>
        <node class="Action" id="12">
          <property Method="Self.CharacterAgent::EscapeFromTarget()" />
          <property ResultOption="BT_SUCCESS" />
        </node>
        <node class="Action" id="13">
          <property Method="Self.CharacterAgent::MoveToTarget()" />
          <property ResultOption="BT_INVALID" />
        </node>
      </node>
    </node>
    <node class="Wait" id="0">
      <property Time="const float 100" />
    </node>
  </node>
</behavior>